
char stringToMorseCode[] = "Arduino Morse Code Project";
int pin = 13;

void setup() {
  pinMode(pin, OUTPUT);
}

void loop() {
  /*looping through a string to get each character one 
  at a time until the end */
  for (int i = 0; i <sizeof(stringToMorseCode) - 1; i++)
  {
    //get the charater in the right position
    char tmpChar = stringToMorseCode[i];
    //set it to lowercase
    tmpChar = toLowerCase(tmpChar);
    //call subroutine to get the morse equivalent
    GetChar(tmpChar);
  // type in your morse code message in Serial Moniter under the "tools" section
  // will recognize lowercase a-z and numbers 0-9
}
}
void dot(){
  digitalWrite(pin, HIGH);
  delay(250);
  digitalWrite(pin, LOW);
  delay(250);
}

void dash(){
  digitalWrite(pin, HIGH);
  delay(1000);
  digitalWrite(pin, LOW);
  delay(250);
}
void GetChar(char tmpChar) {
switch (tmpChar) {
    case 'a':
        dot(); 
        dash();
      break;
    case 'b':
        dash(); 
        dot(); 
        dot(); 
        dot();
      break;
      case 'c':
        dash(); 
        dot(); 
        dash(); 
        dot();
      break;
      case 'd':
        dash(); 
        dot(); 
        dot();
      break;
      case 'e':
        dot();
      break;
      case 'f':
        dot(); 
        dot(); 
        dash(); 
        dot();
      break;
      case 'g':
        dash(); 
        dash(); 
        dot();
      break;
      case 'h':
        dot(); 
        dot(); 
        dot(); 
        dot();
      break;
      case 'i':
        dot(); 
        dot();
      break;
      case 'j':
        dot(); 
        dash(); 
        dash(); 
        dash();
      break;
      case 'k':
        dash(); 
        dot(); 
        dash();
      break;
      case 'l':
        dot(); 
        dash(); 
        dot(); 
        dot();
      break;
      case 'm':
        dash(); 
        dash();
      break;
      case 'n':
        dash(); 
        dot();
      break;
      case 'o':
        dash(); 
        dash(); 
        dash();
      break;
      case 'p':
        dot(); 
        dash(); 
        dash(); 
        dot();
      break;
      case 'q':
        dash(); 
        dash(); 
        dot(); 
        dash();
      break;
      case 'r':
        dot(); 
        dash(); 
        dot();
      break;
      case 's':
        dot(); 
        dot(); 
        dot();
      break;
      case 't':
        dash();
      break;
      case 'u':
        dot(); 
        dot(); 
        dash();
      break;
      case 'v':
        dot(); 
        dot(); 
        dot(); 
        dash();
      break;
      case 'w':
        dot(); 
        dash(); 
        dash();
      break;
      case 'x':
        dash(); 
        dot(); 
        dot(); 
        dash();
      break;
      case 'y':
        dash(); 
        dot(); 
        dash(); 
        dash();
      break;
      case 'z':
        dash(); 
        dash(); 
        dot(); 
        dot();
      break;
      case '1':
        dot(); 
        dash(); 
        dash(); 
        dash(); 
        dash();
      break;
      case '2':
        dot(); 
        dot(); 
        dash(); 
        dash(); 
        dash();
      break;
      case '3':
        dot(); 
        dot(); 
        dot(); 
        dash(); 
        dash();
      break;
      case '4':
        dot(); 
        dot(); 
        dot(); 
        dot(); 
        dash();
      break;
      case '5':
        dot(); 
        dot(); 
        dot(); 
        dot(); 
        dot();
      break;
      case '6':
        dash(); 
        dot(); 
        dot(); 
        dot(); 
        dot();
      break;
      case '7':
        dash(); 
        dash(); 
        dot(); 
        dot(); 
        dot();
      break;
      case '8':
        dash(); 
        dash(); 
        dash(); 
        dot(); 
        dot();
      break;
      case '9':
        dash(); 
        dash(); 
        dash(); 
        dash(); 
        dot();
      break;
      case '0':
        dash(); 
        dash(); 
        dash(); 
        dash(); 
        dash();
      break;
      case '.':
        dot(); 
        dash(); 
        dot(); 
        dash(); 
        dot(); 
        dash();
      break;
    default: 
      // if nothing else matches, do the default
      digitalWrite(pin, LOW);
      delay(2000); 
    }
}
